# This file overrides https://github.com/bbatsov/rubocop/blob/master/config/default.yml

AllCops:
  Exclude:
    # 自動生成されるファイルや外部ライブラリは制御できないのでチェック対象外
    - 'db/schema.rb'
    - 'db/migrate/*'
    - 'vendor/**/*'
    - 'node_modules/**/*'
    - 'config/initializers/sorcery.rb'
    # テストデータ用のコードは横に長くなりがちなのでチェック対象外
    - 'db/fixtures/**/*'
    - 'spec/factories/**/*'
    - 'bin/webpack'
    - 'bin/webpack-dev-server'
    - 'bin/yarn'
  TargetRubyVersion: 2.3

# Align the elements of an array literal if they span more than one line
Layout/AlignArray:
  Enabled: false

Layout/EmptyLineAfterMagicComment:
  Enabled: false

Layout/EmptyLinesAroundExceptionHandlingKeywords:
  Enabled: false

Layout/IndentHeredoc:
  Enabled: false

# Checks indentation of method calls with the dot operator
# that span more than one line
Layout/MultilineMethodCallIndentation:
  Enabled: false

# Checks indentation of binary operations that span more than one line
Layout/MultilineOperationIndentation:
  EnforcedStyle: indented

# Checks that exactly one space is used between a method name
# and the first argument for method calls without parentheses
Layout/SpaceBeforeFirstArg:
  Enabled: false

Lint/AmbiguousBlockAssociation:
  Enabled: false

# Align ends corresponding to defs correctly
# http://www.rubydoc.info/github/bbatsov/rubocop/master/Rubocop/Cop/Lint/EndAlignment
# keyword = if true
#           end
# variable = if true
# end
Lint/EndAlignment:
  EnforcedStyleAlignWith: variable

# 空のrescue節をチェック
# http://www.rubydoc.info/github/bbatsov/rubocop/Rubocop/Cop/Lint/HandleExceptions
Lint/HandleExceptions:
  Enabled: false

# Checks that ABC (Assignment Branch Condition) size is not higher than the configured maximum
Metrics/AbcSize:
  # デフォルトの15は厳しすぎるので緩めている。25は守りたい
  Max: 25

# Avoid long blocks with many lines
Metrics/BlockLength:
  # ファイル丸ごとブロックに入りそうなファイルは行数制限から外す
  Exclude:
    - "**/*_spec.rb"
    - "**/*.rake"
    - "config/environments/*.rb"
    - "config/routes.rb"

# Avoid classes longer than some maximum lines of code
Metrics/ClassLength:
  Max: 300

# Limit lines to some maximum characters
Metrics/LineLength:
  Max: 120

# Avoid methods longer than some maximum lines of code
Metrics/MethodLength:
  Max: 20

# Avoid modules longer than some maximum lines of code
Metrics/ModuleLength:
  Max: 300

# has_ から始まるメソッドは許可する
Naming/PredicateName:
  NamePrefixBlacklist:
    - "is_"
    - "have_"
  NamePrefix:
    - "is_"
    - "have_"

# Use only ascii symbols in comments
Style/AsciiComments:
  Enabled: false

# Avoid using {...} for multi-line blocks (multiline chaining is always ugly).
# Prefer {...} over do...end for single-line blocks
Style/BlockDelimiters:
  Enabled: false

# Checks style of children classes and modules
Style/ClassAndModuleChildren:
  Enabled: false

# Enforces consistent use of `Object#is_a?` or `Object#kind_of?`
Style/ClassCheck:
  Enabled: false

# Checks for uses of unidiomatic method names from the Enumerable module
Style/CollectionMethods:
  Enabled: true
  PreferredMethods:
    collect: 'map'
    collect!: 'map!'
    inject: false
    detect: false
    find_all: false

# Document classes and non-namespace modules
Style/Documentation:
  Enabled: false

Style/DoubleNegation:
  Enabled: false

# This cop is designed to help upgrade to Ruby 3.0.
# It will add the comment `# frozen_string_literal: true` to enable frozen string literals
Style/FrozenStringLiteralComment:
  Enabled: false

# Favor modifier if/unless usage when you have a single-line body.
Style/IfUnlessModifier:
  Enabled: false

# Checks for uses of the lambda literal syntax for single line lambdas,
# and the method call syntax for multiline lambdas
Style/Lambda:
  # Scopeは複数行でも`-> { }`形式で揃えた方が見た目が綺麗だが、
  # その他のケースでは`lambda do-end`を使ったほうが見やすい時もあるので。
  Enabled: false

# %記法の囲い文字チェック
# http://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/PercentLiteralDelimiters
# cf.) http://qiita.com/tbpgr/items/abebdab1b524be2ef9f4
Style/PercentLiteralDelimiters:
  Enabled: false

# Checks for proper usage of fail and raise
Style/SignalException:
  Enabled: false

# Enforces the names of some block params
Style/SingleLineBlockParams:
  Enabled: false

# Checks if uses of quotes match the configured preference
Style/StringLiterals:
  Enabled: false

Style/SymbolArray:
  Enabled: false

# Checks for trailing comma in array and hash literals
Style/TrailingCommaInLiteral:
  EnforcedStyleForMultiline: comma

# Favor modifier while/until usage when you have a single-line body
Style/WhileUntilModifier:
  Enabled: false

# 文字列の配列を %w() で書いているか
# http://www.rubydoc.info/github/bbatsov/rubocop/Rubocop/Cop/Style/WordArray
Style/WordArray:
  Enabled: false

# Checks for use of parentheses around ternary conditions.
Style/TernaryParentheses:
  Enabled: false

##################### Rails ##################################
Rails:
  Enabled: true

# http://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Rails/Blank
# !foo.present? -> foo.blank?
Rails/Blank:
  Enabled: false

# http://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Rails/FilePath
# /hoge/piyo -> File.join('hoge', 'piyo')
Rails/FilePath:
  Enabled: false

# Prefer all.find_each over all.each
Rails/FindEach:
  Enabled: false

Rails/SkipsModelValidations:
  Enabled: false

# Checks for calls to puts, print, etc.
Rails/Output:
  Exclude:
    # bin/ や config/ 下は標準出力に出すのが正しいスクリプトがあるので、除外
    - 'bin/**/*'
    - 'config/**/*'

# unless hoge.present? => if hoge.blank? などのチェック
Rails/Present:
  Enabled: false

Rails/UnknownEnv:
  Environments:
    - development
    - sandbox
    - test
    - staging
    - production

# 対応した時の影響範囲が見きれずfalse
Rails/HasManyOrHasOneDependent:
  Enabled: false

# 対応した時の影響範囲が見きれずfalse
Lint/UriEscapeUnescape:
  Enabled: false
